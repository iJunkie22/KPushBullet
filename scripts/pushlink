#!/bin/bash

readconf () {
iconfile=$(kreadconfig --file "kpushbulletrc" --group "General" --key "Icon")
resourcedir=$(kreadconfig --file "kpushbulletrc" --group "General" --key "Resource Directory")
apikey=$(kreadconfig --file "kpushbulletrc" --group "User Data" --key "APIKey")
recentrss=$(kreadconfig --file "kpushbulletrc" --group "RSS Generator" --key "RSS Output File")
rssheaderrs=$(kreadconfig --file "kpushbulletrc" --group "RSS Generator" --key "RSS Header Resource")
rssfooterrs=$(kreadconfig --file "kpushbulletrc" --group "RSS Generator" --key "RSS Footer Resource")
}
locate_resource_dir () {
(kdialog --caption "KPushBullet" --getexistingdirectory "$HOME" --title "Locate the resources directory!") | (kwriteconfig --file "kpushbulletrc" --group "General" --key "Resource Directory" $(cat -))
(kwriteconfig --file "kpushbulletrc" --group "General" --key "Icon" "$resourcedir/icon.png")
(kwriteconfig --file "kpushbulletrc" --group "RSS Generator" --key "RSS Header Resource" "$resourcedir/rssHeader")
(kwriteconfig --file "kpushbulletrc" --group "RSS Generator" --key "RSS Footer Resource" "$resourcedir/rssFooter")
readconf
}

readconf
if [ ! -e "$resourcedir" ]
  then
  locate_resource_dir
  readconf
fi
if [ -z $apikey ]
    then 
    # APIkey is undefined, so prompt the user for it
    inputdesc="Please iput your PushBullet API key. The key is stored locally for convenience so you don't have to enter it every time you fetch your pushes. You have the option to opt-out of this convenience in the next step."
    inputtitle="KPushBullet - Enter Your API Key."
    
    apikey="$(kdialog --icon "$iconfile" --caption "KPushBullet" --title "Setup" --password "$inputdesc" "")"
    kdialog --yesno "Would you like to save the key for later?"; if [[ "$?" == 0 ]]; then (kwriteconfig --file "kpushbulletrc" --group "User Data" --key "APIKey" $apikey);readconf; fi
fi
#(curl https://api.pushbullet.com/v2/devices -u $apikey:) > 
#| jq '[.devices] | .[0]') | awk -F ":" '/\:/ { print $0 }'
#vir_path="$(echo $0)"
#real_kpb_root="$(ls -l "$vir_path" | awk -F "-> " '{print $2}'|awk -F "\/scripts\/" '{print $1}')"

inputdesc="The page title will be generated for you. "
inputtitle="KPushBullet - Push New Link"

linkcontent="$(kdialog --icon "$iconfile" --inputbox "$inputdesc" "" --title "$inputtitle")"
linklength="${#linkcontent}"
if [[ "$linklength" > 0 ]]
then
autolinkname="$(curl -s -N "$linkcontent" | awk -F "<|>" '$2=="title" { print $3 }')"
(curl https://api.pushbullet.com/v2/pushes -u $apikey: -s -d type="link" -d title="$autolinkname" -d url="$linkcontent" -X POST --stderr -) | jq -r '.| if .error then .error | "<<ERROR>>Error.......\(.type)","<<ERROR>>\(.message)" else "Success:", .title, .url end'|sed -e 's/\(^<<ERROR>>.*\)/\U\1/;s/^<<ERROR>>//g'|(kdialog --icon "$iconfile" --passivepopup "$(cat -)" 20)
else
echo "${#linkcontent}"
fi
exit
